// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../resource.mjs";
import { isRequestOptions } from "../core.mjs";
import { SessionsCursor } from "../pagination.mjs";
export class Sessions extends APIResource {
    create(body = {}, options) {
        if (isRequestOptions(body)) {
            return this.create({}, body);
        }
        return this._client.post('/v1/sessions', { body, ...options });
    }
    /**
     * Retrieves details of a specific session by ID.
     */
    retrieve(id, options) {
        return this._client.get(`/v1/sessions/${id}`, options);
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/v1/sessions', SessionListResponsesSessionsCursor, { query, ...options });
    }
    /**
     * Fetches the context data of a specific session.
     */
    context(id, options) {
        return this._client.get(`/v1/sessions/${id}/context`, options);
    }
    /**
     * Releases a specific session by ID.
     */
    release(id, options) {
        return this._client.post(`/v1/sessions/${id}/release`, options);
    }
    /**
     * Releases all active sessions for the current organization.
     */
    releaseAll(options) {
        return this._client.post('/v1/sessions/release', options);
    }
}
export class SessionListResponsesSessionsCursor extends SessionsCursor {
}
Sessions.SessionListResponsesSessionsCursor = SessionListResponsesSessionsCursor;
//# sourceMappingURL=sessions.mjs.map